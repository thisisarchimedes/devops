name: Deploy to Prod Stage

on:
  push:
    branches:
      - main
  
env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
  ALCHEMY_RPC_URL: ${{ secrets.ALCHEMY_RPC_URL }}
  INFURA_RPC_URL: ${{ secrets.INFURA_RPC_URL }}
  ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
  INFURA_GAS_API_KEY: ${{ secrets.INFURA_GAS_API_KEY }}
  INFURA_GAS_API_SECRET: ${{ secrets.INFURA_GAS_API_SECRET }}
  _0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266: ${{ secrets._0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266 }}
  API_DEVOPS_EVENT_CATCHER: ${{ secrets.API_DEVOPS_EVENT_CATCHER }}
  DEVOPS_EVENTS_SECRET_TOKEN: ${{ secrets.DEVOPS_EVENTS_SECRET_TOKEN }}
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Run docker-compose
        uses: isbang/compose-action@v1.5.1
        with:
          compose-file: './docker-compose.yml'
          services: |
            db

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Run install
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Deploy to production
        run: |
          echo "placeholder"

      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
